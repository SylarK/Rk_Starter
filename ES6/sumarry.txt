Summary

***** Some FUNCTIONS / Algumas funções *****

const arr = [1,3,4,5,8,9];

const newArr = arr.map(function(item, index) {

    return item + index;

})

const sum = arr.reduce(function(total, next){

    return total + next;

})

const filter = arr.filter(function(item){

    return item % 2 === 0;

})

const find = arr.find(function(item) {

    return item === 4;

})


***** ARROW FUNCTIONS *****
//UTILIZADAS NAS FUNÇÕES ANÔNIMAS.

const arr = [1, 3, 4, 5, 6];

const newArr = arr.map(item => {

    return item * 2

})

const newArr2 = arr.map(item => item * 2)

const teste = () => {
    return 'teste'
}

const teste = () => ({nome : 'Lucas'});

const soma = (a = 2, b = 5) => a + b


***** DESESTRUTURAÇÃO *****

const usuario = {

    nome: 'Lucas',
    idade: 25,
    endereco: {
        cidade:'Ipora',
        estado: 'GO',
    },

    };

    const { nome, idade, endereco: { cidade } } = usuario;

    function mostraNome({nome, idade}){

        console.log('Nome: ' + nome + ' Idade: ' + idade)

    }

    mostraNome(usuario)



***** REST AND SPREAD *****

//REST - pegar o resto das propriedades

const usuario = {

    nome:'Lucas',
    idade: 25,
    empresa: 'Thunder Storm'

};

function soma(...params){

    return params.reduce((total, next) => total + next);

}

const {nome, ...resto} = usuario;

console.log(nome)
console.log(resto)


//SPREAD - repassar informações para outra estrutura de dados

const arr1 = [1,2,3]
const arr2 = [4,5,6]

const arr3 = [...arr1, ...arr2]

const usuario1 = {
    nome: 'Lucas',
    idade: 25
}

const usuario2 = {...usuario, nome:'Bill'}

console.log(usuario)
console.log(usuario2)


***** TEMPLATE LITERALS *****

//Template Literals

const nome = 'Bill'
const idade = 118;

console.log(`Meu nome é ${nome} e tenho ${idade} anos`)


